## File input
<source>
  type tail
  format /\[?(?<errors_from>[^\[\]]*)?\]?.*(?<timestamp>\d{4}\/\d{2}\/\d{2} \d{2}\:\d{2}\:\d{2}) (\^\[\[1;34m\[)?(?<code_address>[^.:;\[]+\.[^.:]+:\d*)?\]?(?<message>[^\^]*)|\[(?<errors_from>[^\[\]]*)?\] - (?<timestamp>\d{4}\-\d{2}\-\d{2} \d{2}\:\d{2}\:\d{2}) - (?<message>.*)/
  path /home/*/var/app.log
  pos_file /var/log/td-agent/openfalcon.log.pos
  tag  openfalcon
</source>

<source>
  type tail
  format /\[?(?<errors_from>[^\[\]]*)?\]?.*(?<timestamp>\d{4}\/\d{2}\/\d{2} \d{2}\:\d{2}\:\d{2}) (\^\[\[1;34m\[)?(?<code_address>[^.:;\[]+\.[^.:]+:\d*)?\]?(?<message>[^\^]*)|\[(?<errors_from>[^\[\]]*)?\] - (?<timestamp>\d{4}\-\d{2}\-\d{2} \d{2}\:\d{2}\:\d{2}) - (?<message>.*)|(?<message>[^\^]*)/
  path /home/*/var/app.log
  pos_file /var/log/td-agent/openfalcon.log.pos1
  tag  all_log
</source>

## File filter
<match all_log>
  type grep
  input_key timestamp
  regexp ^$
  tag notime
</match>

<match openfalcon>
  type record_reformer
  renew_record false
  enable_ruby true

  tag addinfo.${tag}
  hostname ${hostname}
  timestamp ${timestamp} +0800
</match>

<match addinfo.openfalcon>
  type time_parser
  key            timestamp
  add_tag_prefix extracted.
  time_zone      UTC
</match>

<match extracted.**>
  type record_reformer
  renew_record false
  enable_ruby true
  remove_keys parsed_date,parsed_hour,parsed_time
  tag elasticsearch.output
  timestamp ${parsed_time}
</match>

## No timestamp
<match notime>
  type record_reformer
  renew_record false
  enable_ruby true

  tag elasticsearch.output
  hostname ${hostname}
  timestamp ${time}
</match>

<filter elasticsearch.output>
  type elasticsearch_timestamp_check
</filter>

